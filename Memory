
——— Memory Hierachy (from fast/small/expensive to slow/big/inexpensive): 

Registers
Cache
Main memory (RAM) 
Secondary memory (hard disk drive: magnetic or solid state)
Tertiary memory
Off-line bulk memory


——— Cache Mapping Schemes:

1. Direct Mapping
Three fields: Tag | Block | Offset
how it works: block X of main memory is mapped to block Y of cache, using Y = X mod N, where N is the total number of blocks in cache. 
- advantage: simple, easy, which memory block is mapped to which cache block is already decided
- disadvantage: 
    - "thrashing" can happen
        - i.e. if a procedure has two instructions that map to the same cache block, they are frequently evicted and reloaded. 
    - some cache blocks might still be idle while others are evicted from cache

2. Full Associative Mapping:
Two fields: Tag | Offset
how it works: allows memory block to go into any cache block
- advantage: all cache blocks can be filled up before any block is evicted; no thrashing
- disadvantage: 
    - all tags in cache are searched in parallel to locate data quickly, causing costly hardware
    - you need algorithm for picking a “victim block” to evict
    - Three types of eviction algorithms:
        - LRU
        - FIFO
        - Random

3. Set Associative Mapping
Three fields: Tag | Set | Offset
how it works: a combination of the above two methods; 
    - which memory goes into which "set" is determined like the "block" field in direct mapping
    - once inside a set, the mapping scheme is full associative.
    

——— 6.5 Virtual Memory

•Cache memory enhances performance by providing faster memory access speed. <Time>
•Virtual memory enhances performance by providing greater memory capacity, without the expense of adding main memory. <Space>


•A portion of a hard disk drive serves as an extension of main memory (RAM).
•If a system uses paging, virtual memory partitions main memory into individually managed page frames, that are written (or paged) to disk when they are not immediately needed.


•A physical address is the actual memory address of physical memory.
•Programs create virtual addresses that are mapped to physical addresses by the *memory manager. (*OS has memory manager, file manager, etc. )
•Page faults occur when a logical address requires that a page be brought in from disk.
•Memory fragmentation occurs when the paging process results in the creation of small, unusable clusters of memory addresses.


•Main memory and virtual memory are divided into equal sized pages.
•The entire address space required by a process need not be in memory at once. Some parts can be on disk, while others are in main memory.
•Further, the pages allocated to a process do not need to be stored contiguously-- either on disk or in memory.
•In this way, only the needed pages are in memory at any time, the unnecessary pages are in slower disk storage.

define terms:
Page frames — The equal-size chunks or blocks into which main memory (physical memory) is divided. 
Pages — The chunks or blocks into which virtual memory (the logical address space) is divided, each equal in size to a page frame. 
Paging — The process of copying a virtual page from disk to a page frame in main memory. 
Page File — the area on hard disk that stores chunks of main memory that are currently not in use. 

